<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.io7m.primogenitor</groupId>
    <artifactId>com.io7m.primogenitor.full</artifactId>
    <version>8.4.0</version>
  </parent>

  <groupId>com.io7m.blockhead</groupId>
  <artifactId>com.io7m.blockhead</artifactId>
  <version>1.0.1-SNAPSHOT</version>

  <name>com.io7m.blockhead</name>
  <description>Unbound blocklist maintenance</description>
  <url>https://www.io7m.com/software/blockhead</url>

  <properties>
    <!-- Configuration. -->
    <io7m.api.previousVersion>1.0.0</io7m.api.previousVersion>
    <io7m.java.targetJavaVersion>21</io7m.java.targetJavaVersion>

    <!-- io7m dependencies. -->
    <com.io7m.quarrel.version>1.6.1</com.io7m.quarrel.version>

    <!-- Third-party dependencies. -->
    <com.squareup.okio.version>3.9.1</com.squareup.okio.version>
    <io.opentelemetry.semconv.version>1.30.1-alpha</io.opentelemetry.semconv.version>
    <io.opentelemetry.version>1.45.0</io.opentelemetry.version>
    <org.jetbrains.version>1.9.25</org.jetbrains.version>

    <!-- Container dependencies. -->
    <com.io7m.oci.versionAlpine>3.20.3</com.io7m.oci.versionAlpine>
    <com.io7m.oci.versionTemurin>23.0.1_11-jre-alpine</com.io7m.oci.versionTemurin>
  </properties>

  <licenses>
    <license>
      <name>ISC</name>
      <url>https://www.io7m.com/license/isc.txt</url>
    </license>
  </licenses>

  <scm>
    <url>https://www.github.com/io7m-com/blockhead</url>
    <connection>scm:git:https://github.com/io7m-com/blockhead</connection>
    <developerConnection>scm:git:https://github.com/io7m-com/blockhead</developerConnection>
  </scm>

  <developers>
    <developer>
      <id>io7m</id>
      <name>Mark Raynsford</name>
      <email>code@io7m.com</email>
      <url>https://www.io7m.com</url>
    </developer>
  </developers>

  <issueManagement>
    <url>https://www.github.com/io7m-com/blockhead/issues</url>
    <system>GitHub Issues</system>
  </issueManagement>

  <distributionManagement>
    <site>
      <id>io7m.com</id>
      <name>io7m.com</name>
      <url>https://www.io7m.com/software/blockhead</url>
    </site>
    <repository>
      <id>sonatype-nexus-staging</id>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>sonatype-nexus-snapshots</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

  <ciManagement>
    <system>GitHub Actions</system>
    <url>https://github.com/blockhead/actions</url>
  </ciManagement>

  <prerequisites>
    <maven>3.0.4</maven>
  </prerequisites>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.opentelemetry</groupId>
        <artifactId>opentelemetry-bom</artifactId>
        <version>${io.opentelemetry.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>2.0.16</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.5.16</version>
    </dependency>

    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.annotation.bundle</artifactId>
      <version>2.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.annotation.versioning</artifactId>
      <version>1.1.2</version>
    </dependency>

    <dependency>
      <groupId>com.io7m.repetoir</groupId>
      <artifactId>com.io7m.repetoir.core</artifactId>
      <version>1.0.1</version>
    </dependency>

    <!-- OpenTelemetry -->
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-semconv</artifactId>
      <version>${io.opentelemetry.semconv.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
      <version>${org.jetbrains.version}</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.okio</groupId>
      <artifactId>okio-jvm</artifactId>
      <version>${com.squareup.okio.version}</version>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-otlp</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.jetbrains.kotlin</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.squareup.okio</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-metrics</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-common</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-trace</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-logs</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-context</artifactId>
    </dependency>

    <!-- CLI -->
    <dependency>
      <groupId>com.io7m.quarrel</groupId>
      <artifactId>com.io7m.quarrel.core</artifactId>
      <version>${com.io7m.quarrel.version}</version>
    </dependency>
    <dependency>
      <groupId>com.io7m.quarrel</groupId>
      <artifactId>com.io7m.quarrel.ext.logback</artifactId>
      <version>${com.io7m.quarrel.version}</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <configuration>
            <suppressionsLocation>checkstyle-filter.xml</suppressionsLocation>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Ignore dependencies that bytecode analysis gets wrong. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <failOnWarning>true</failOnWarning>
          <ignoredUnusedDeclaredDependencies>
            <ignoredUnusedDeclaredDependency>ch.qos.logback:logback-classic::*</ignoredUnusedDeclaredDependency>
            <ignoredUnusedDeclaredDependency>org.jetbrains.kotlin:kotlin-stdlib::*</ignoredUnusedDeclaredDependency>
            <ignoredUnusedDeclaredDependency>com.squareup.okio:okio-jvm::*</ignoredUnusedDeclaredDependency>
          </ignoredUnusedDeclaredDependencies>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.io7m.stmp</groupId>
        <artifactId>string-template-maven-plugin</artifactId>
        <version>2.0.0</version>
        <executions>
          <execution>
            <id>generate-version</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>
              <template>
                <inputFile>src/main/string-template/BHVersion.st</inputFile>
                <name>BHVersion</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/blockhead/BHVersion.java
                </outputFile>
                <properties>
                  <appVersion>${project.version}</appVersion>
                  <appBuild>${buildNumber}</appBuild>
                </properties>
              </template>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-sources</id>
            <goals>
              <goal>add-source</goal>
            </goals>
            <phase>
              generate-sources
            </phase>
            <configuration>
              <sources>
                <source>
                  ${project.build.directory}/generated-sources/string-template
                </source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <id>onejar</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <minimizeJar>false</minimizeJar>
              <shadedClassifierName>main</shadedClassifierName>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>com.io7m.blockhead.BHMain</Main-Class>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
            </configuration>
          </execution>
          <execution>
            <id>onejar-oci</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <minimizeJar>false</minimizeJar>
              <shadedClassifierName>main</shadedClassifierName>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>com.io7m.blockhead.BHMain</Main-Class>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
              <outputFile>${project.build.directory}/oci/blockhead/blockhead.jar</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Generate a site -->
      <plugin>
        <groupId>com.io7m.minisite</groupId>
        <artifactId>com.io7m.minisite.maven_plugin</artifactId>
        <inherited>false</inherited>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>io7m-oci-image</id>
      <build>
        <plugins>
          <!-- Copy filtered container file to build directory. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-containerfile</id>
                <phase>package</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <resources>
                    <resource>
                      <directory>src/main/oci</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                  <outputDirectory>${project.build.directory}/oci</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- OCI image creation and deployment. -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <!-- Build and tag an image with podman. -->
              <execution>
                <id>oci-image-create</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <executable>podman</executable>
                  <arguments>
                    <argument>build</argument>
                    <argument>--timestamp</argument>
                    <argument>1577836800</argument>
                    <argument>-t</argument>
                    <argument>quay.io/io7mcom/blockhead:${project.version}</argument>
                    <argument>${project.build.directory}/oci</argument>
                  </arguments>
                </configuration>
              </execution>

              <!-- Run the image as a basic sanity check. -->
              <execution>
                <id>oci-image-run-check</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <executable>podman</executable>
                  <arguments>
                    <argument>run</argument>
                    <argument>--rm</argument>
                    <argument>quay.io/io7mcom/blockhead:${project.version}</argument>
                    <argument>help</argument>
                  </arguments>
                </configuration>
              </execution>

              <!-- Push with podman. -->
              <execution>
                <id>oci-image-push</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>deploy</phase>
                <configuration>
                  <executable>podman</executable>
                  <arguments>
                    <argument>push</argument>
                    <argument>quay.io/io7mcom/blockhead:${project.version}</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>